// @ts-nocheck
const OrbDB=require("../orb");class OrbDBSchema{constructor(e){this.OrbDB=e,this.models=[]}addModel(e){this.models.push(e)}async createSchema(){this.models.forEach((async e=>{const r={$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{},required:[]};Object.keys(e.fields).forEach((t=>{const s=e.fields[t].type,o={};"string"===s?o.type="string":"number"===s?o.type="number":"boolean"===s&&(o.type="boolean"),r.properties[t]=o,e.fields?.[t]?.required&&(r.required.includes(t)||r.required.push(t))})),await this.OrbDB.createSchema({tableName:e.name,...r})}))}validate(e){for(const r of this.models)for(const t in r.fields){const s=r.fields[t];if(s.required&&!(t in e))throw new Error(`Missing required field: ${t}`);if(s.type&&typeof e[t]!==s.type)throw new Error(`Invalid type for field ${t}: expected ${s.type}`)}}}module.exports=OrbDBSchema;