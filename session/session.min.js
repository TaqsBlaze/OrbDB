// @ts-nocheck
class Session{constructor(t){this.dbAdapter=t,this.operations=[],this.active=!0}addOperation(t,e,a){if(!this.active)throw new Error("Cannot add operations to an inactive session.");this.operations.push({type:t,tableName:e,data:a}),console.log(`Operation added: ${t} on '${e}'`,a)}async commit(){if(!this.active)throw new Error("Session is no longer active.");try{for(const t of this.operations)"insert"===t.type?await this.dbAdapter.insert(t.tableName,t.data):"update"===t.type?await this.dbAdapter.update(t.tableName,t.data):"delete"===t.type&&await this.dbAdapter.delete(t.tableName,t.data);console.log("Transaction committed successfully.")}catch(t){throw console.error("Error during commit:",t),t}finally{this.clear()}}rollback(){if(!this.active)throw new Error("Session is no longer active.");this.clear(),console.log("Transaction rolled back.")}clear(){this.operations=[],this.active=!1}}module.exports=Session;